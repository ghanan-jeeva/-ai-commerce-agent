{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890",
		"name": "AI Commerce Agent",
		"description": "Collection for testing the AI Commerce Agent API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Search Products",
			"item": [
				{
					"name": "Basic Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"    pm.expect(jsonData.length).to.be.at.most(3);",
									"});",
									"",
									"pm.test(\"Products have required fields and structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.have.property('id').that.matches(/^laptop-\\d+$/);",
									"    pm.expect(jsonData[0]).to.have.property('score').that.is.a('number');",
									"    pm.expect(jsonData[0].metadata).to.include.all.keys('name', 'description', 'price', 'category', 'features', 'use_case', 'brand');",
									"    pm.expect(jsonData[0].metadata.features).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"pm.test(\"Products match search criteria\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.forEach(function(product) {",
									"        pm.expect(product.metadata.category).to.equal('laptops');",
									"        pm.expect(product.metadata.price).to.be.within(1000, 3000);",
									"        pm.expect(product.metadata.use_case).to.equal('gaming');",
									"        pm.expect(product.metadata.features.some(f => f.includes('battery') || f.includes('Battery'))).to.be.true;",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"gaming laptop with RTX 3080\",\n    \"category\": \"laptops\",\n    \"min_price\": 1000,\n    \"max_price\": 3000,\n    \"top_k\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/search",
							"host": ["{{base_url}}"],
							"path": ["api", "search"]
						}
					}
				},
				{
					"name": "Price Range Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Error message indicates no products found\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.detail).to.equal('No products found matching the criteria');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"cheap laptop\",\n    \"category\": \"laptops\",\n    \"min_price\": 0,\n    \"max_price\": 500,\n    \"top_k\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/search",
							"host": ["{{base_url}}"],
							"path": ["api", "search"]
						}
					}
				},
				{
					"name": "Invalid Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Error message mentions invalid category\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.detail).to.include('Invalid category: invalid_category');",
									"    pm.expect(jsonData.detail).to.include('Valid categories are: laptops, smartphones, tablets, audio');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"gaming laptop\",\n    \"category\": \"invalid_category\",\n    \"top_k\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/search",
							"host": ["{{base_url}}"],
							"path": ["api", "search"]
						}
					}
				}
			]
		},
		{
			"name": "Similar Products",
			"item": [
				{
					"name": "Get Similar Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Error message mentions product not found\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.detail).to.equal('Product not found: laptop-33');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/similar/laptop-33?category=laptops&top_k=3",
							"host": ["{{base_url}}"],
							"path": ["api", "similar", "laptop-33"],
							"query": [
								{
									"key": "category",
									"value": "laptops"
								},
								{
									"key": "top_k",
									"value": "3"
								}
							]
						}
					}
				},
				{
					"name": "Non-existent Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Error message mentions product not found\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.detail).to.equal('Product not found: nonexistent-id');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/similar/nonexistent-id?category=laptops",
							"host": ["{{base_url}}"],
							"path": ["api", "similar", "nonexistent-id"],
							"query": [
								{
									"key": "category",
									"value": "laptops"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has healthy status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.equal('healthy');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": ["{{base_url}}"],
					"path": ["health"]
				}
			}
		},
		{
			"name": "Agent Q&A",
			"item": [
				{
					"name": "Basic Product Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('response').that.is.a('string');",
									"    pm.expect(jsonData).to.have.property('suggested_products').that.is.an('array');",
									"    pm.expect(jsonData).to.have.property('follow_up_questions').that.is.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"I need a laptop for gaming and video editing. What would you recommend?\",\n    \"conversation_history\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/agent/qa",
							"host": ["{{base_url}}"],
							"path": ["api", "agent", "qa"]
						}
					}
				},
				{
					"name": "Follow-up Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response maintains context\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.response).to.include('gaming') || pm.expect(jsonData.response).to.include('video editing');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"What about battery life?\",\n    \"conversation_history\": [\n        {\n            \"user\": \"I need a laptop for gaming and video editing. What would you recommend?\",\n            \"assistant\": \"Based on your needs, I recommend a high-performance laptop with a powerful GPU and processor...\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/agent/qa",
							"host": ["{{base_url}}"],
							"path": ["api", "agent", "qa"]
						}
					}
				}
			]
		},
		{
			"name": "Image Search",
			"item": [
				{
					"name": "Search by Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains products\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"    pm.expect(jsonData.length).to.be.at.most(3);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"image\": \"{{base64_image}}\",\n    \"category\": \"laptops\",\n    \"top_k\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/search/image",
							"host": ["{{base_url}}"],
							"path": ["api", "search", "image"]
						}
					}
				}
			]
		}
	]
} 